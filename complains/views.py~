from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response
from rest_framework import status
from rest_framework.views import APIView
from .models import Notification, Tenant
from .serializers import NotificationSerializer


class NotificationsView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request, landlordId):
        data = request.data
        try:
            # Fetching tenant from the database
            tenant = Tenant.objects.get(id=request.data['tenant_id'])

            # Create a new notification
            notification = Notification.objects.create(
                tenant=tenant,
                notification_type=data['notification_type'],
                message_content=data['message_content']
            )

            # Serializing the notification data and returning response
            serializer = NotificationSerializer(notification)
            return Response(serializer.data, status=status.HTTP_201_CREATED)

        except Tenant.DoesNotExist:
            return Response({"error": "Tenant not found"}, status=status.HTTP_404_NOT_FOUND)
        except KeyError as e:
            return Response({"error": f"Missing required field: {str(e)}"}, status=status.HTTP_400_BAD_REQUEST)
